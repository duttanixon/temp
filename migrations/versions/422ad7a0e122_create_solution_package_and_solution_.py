"""create solution_package and solution_package_model table

Revision ID: 422ad7a0e122
Revises: 38d479eb4cb3
Create Date: 2025-08-10 00:40:51.573773

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '422ad7a0e122'
down_revision = '38d479eb4cb3'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('solution_package',
    sa.Column('package_id', sa.UUID(), nullable=False),
    sa.Column('solution_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('version', sa.String(), nullable=False),
    sa.Column('s3_bucket', sa.String(), nullable=False),
    sa.Column('s3_key', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['solution_id'], ['solutions.solution_id'], ),
    sa.PrimaryKeyConstraint('package_id')
    )
    op.create_table('solution_package_models',
    sa.Column('package_id', sa.UUID(), nullable=False),
    sa.Column('model_id', sa.UUID(), nullable=False),
    sa.Column('model_role', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['model_id'], ['ai_models.model_id'], ),
    sa.ForeignKeyConstraint(['package_id'], ['solution_package.package_id'], ),
    sa.PrimaryKeyConstraint('package_id', 'model_id')
    )
    op.add_column('device_solutions', sa.Column('package_id', sa.UUID(), nullable=True))

    op.execute("""
        INSERT INTO solution_package (package_id, solution_id, name, version, s3_bucket, s3_key, description)
        SELECT DISTINCT gen_random_uuid(), solution_id, 'default-package', '1.0.0', 'default-bucket', 'default-key', 'Default package for existing device solutions'
        FROM device_solutions
        WHERE solution_id IS NOT NULL
    """)
    op.execute("""
        UPDATE device_solutions 
        SET package_id = (
            SELECT package_id 
            FROM solution_package 
            WHERE solution_package.solution_id = device_solutions.solution_id 
            AND name = 'default-package'
            LIMIT 1
        )
        WHERE package_id IS NULL
    """)
    
    # Make the column non-nullable after populating it
    op.alter_column('device_solutions', 'package_id', nullable=False)

    op.create_foreign_key(None, 'device_solutions', 'solution_package', ['package_id'], ['package_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'device_solutions', type_='foreignkey')
    op.drop_column('device_solutions', 'package_id')
    op.drop_table('solution_package_models')
    op.drop_table('solution_package')
    # ### end Alembic commands ###