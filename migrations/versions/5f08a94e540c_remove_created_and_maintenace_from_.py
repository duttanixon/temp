"""remove CREATED and MAINTENACE from DeviceStatus

Revision ID: 5f08a94e540c
Revises: d9c1eff0850e
Create Date: 2025-09-11 14:47:44.127012

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5f08a94e540c'
down_revision = 'd9c1eff0850e'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("UPDATE devices SET status = 'PROVISIONED' WHERE status = 'CREATED'")
    op.execute("UPDATE devices SET status = 'PROVISIONED' WHERE status = 'MAINTENANCE'")
    op.execute("ALTER TABLE devices ALTER COLUMN status DROP DEFAULT")
    op.execute("CREATE TYPE device_status_new AS ENUM ('PROVISIONED', 'ACTIVE', 'DECOMMISSIONED')")
    op.execute("ALTER TABLE devices ALTER COLUMN status TYPE device_status_new USING status::text::device_status_new")
    op.execute("DROP TYPE device_status")
    # Step 5: Rename the new enum type
    op.execute("ALTER TYPE device_status_new RENAME TO device_status")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Step 1: Create a new enum type with all original values
    op.execute("ALTER TABLE devices ALTER COLUMN status DROP DEFAULT")
    op.execute("CREATE TYPE device_status_new AS ENUM ('CREATED', 'PROVISIONED', 'ACTIVE', 'MAINTENANCE', 'DECOMMISSIONED')")
    
    # Step 2: Alter the column to use the new enum type
    op.execute("ALTER TABLE devices ALTER COLUMN status TYPE device_status_new USING status::text::device_status_new")
    
    # Step 3: Drop the old enum type
    op.execute("DROP TYPE device_status")
    
    # Step 4: Rename the new enum type
    op.execute("ALTER TYPE device_status_new RENAME TO device_status")
    # ### end Alembic commands ###